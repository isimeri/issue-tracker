<!DOCTYPE html>
<html>
  <head>
    <title>Issue Tracker</title>
    <link rel="icon" type="image/png" href="https://cdn.freecodecamp.org/universal/favicons/favicon-16x16.png" />
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="/public/general.css">
    <link rel="stylesheet" href="/public/style.css">
  </head>
  <body>
    <header>
      <h1>
        Issue Tracker
      </h1>
    </header>
    <main>
    <section id="guide-section">
      <div class="guide">
        <h3>Example GET usage</h3>
        <p><code>/api/issues/{project}</code></p>
        <p><code>/api/issues/{project}?open=true&amp;assigned_to=Joe</code></p>
      </div>
      <div class="guide">
        <h3>Example return</h3>
        <pre><code>[
  { 
    "_id": "5871dda29faedc3491ff93bb",
    "issue_title": "Fix error in posting data",
    "issue_text": "When we post data it has an error.",
    "created_on": "2017-01-08T06:35:14.240Z",
    "updated_on": "2017-01-08T06:35:14.240Z",
    "created_by": "Joe",
    "assigned_to": "Joe",
    "open": true,
    "status_text": "In QA"
  },
  ...
]</code></pre>
      </div>
      <div class="guide">
        <h3>Examples</h3>
        <p>Go to <a href='/api/issues/apitest/'><code>/api/issues/apitest/</code></a> for a JSON format view of all the issues regarding the <span class="bold">apitest</span> project.</p>
        <p>Go to <a href='/apitest/'><code>/apitest/</code></a> for a frontend view of all the issues regarding the <span class="bold">apitest</span> project.</p>
        <p>Go to <code>/:project-name/</code></a> for a frontend view of all the issues regarding that particular project.</p>
      </div>
      <div class="feedback-wrapper">
        <h3>Feedback</h3>
        <pre><code id='jsonResult'></code></pre>
      </div>
    </section>
    <section id='testui-section'>
      <h2>API Tests</h2>
      <div class="forms-container">
        <div class="form-wrapper">
          <h3>Submit issue on <i>apitest</i></h3>
          <form id="testForm" class="post-form border">
            <input type="text" name="issue_title" placeholder="*Title" required=''>
            <textarea type="text" name="issue_text" placeholder="*Text" required=''></textarea>
            <input type="text" name="created_by" placeholder="*Created by" required=''>
            <input type="text" name="assigned_to" placeholder="(opt)Assigned to" >
            <input type="text" name="status_text" placeholder="(opt)Status text">
            <button type="submit">Submit Issue</button>
          </form>
        </div>
        <div class="form-wrapper">
          <h3>Update issue by _id</h3>
          <form id="testForm2" class="put-form border">
            <input type="text" name="_id" placeholder="*_id" required=''>
            <input type="text" name="issue_title" placeholder="(opt)Title">
            <textarea type="text" name="issue_text" placeholder="(opt)Text" ></textarea>
            <input type="text" name="created_by" placeholder="(opt)Created by" >
            <input type="text" name="assigned_to" placeholder="(opt)Assigned to">
            <input type="text" name="status_text" placeholder="(opt)Status text">
            <label><input type="checkbox" name="open" value="false"> Check to close issue</label>
            <button type="submit">Update Issue</button>
          </form>
        </div>
        <div class="form-wrapper">
          <h3>Delete issue by _id</h3>
          <form id="testForm3" class="delete-form border">
            <input type="text" name="_id" placeholder="_id" required=''>
            <button type="submit">Delete Issue</button>
          </form>
        </div>
      </div>
    </section>
    </main>
    <script>
      const postForm = document.querySelector('.post-form');
      const putForm = document.querySelector('.put-form');
      const deleteForm = document.querySelector('.delete-form');
      const responseContainer = document.querySelector("#jsonResult");

      postForm.addEventListener("submit", e => {
        e.preventDefault();
        const formData = new FormData(postForm);
        const data = {};

        formData.forEach((value, key) => {
          data[key] = value;
        });
        const json = JSON.stringify(data);
        fetch('/api/issues/apitest', {
          method: 'post',
          headers: {'Content-Type': 'application/json'},
          body: json
        }).then(res => res.json())
        .then(data => {
          let resString = JSON.stringify(data).replace(/\,(?=\")/g, `,\n  `);
          resString = `{\n  ` + resString.slice(1, resString.length-1) + `\n}`;
          responseContainer.textContent = resString;
        }).catch(e => console.error(e));
      });

      putForm.addEventListener('submit', (event) => {
        event.preventDefault();
        const formData = new FormData(putForm);
        const data = {};

        formData.forEach((value, key) => {
          data[key] = value;
        });
        const json = JSON.stringify(data);
        fetch("/api/issues/apitest", {
          method: "put",
          headers: {
            "Content-Type": "application/json"
          },
          body: json
        }).then(res => res.json())
        .then(data => {
            responseContainer.textContent = data.msg;
        })
        .catch(e => console.error(e));
      });

      deleteForm.addEventListener("submit", e => {
        e.preventDefault();
        const deleteFormId = document.querySelector('.delete-form input[name="_id"]').value;
        const url = `/api/issues/apitest?_id=${deleteFormId}`;

        fetch(url, {
          method: 'delete'
        }).then(res => res.json())
        .then(data => {
          responseContainer.textContent = data.msg;
        }).catch(e => console.error(e));
      });

      </script>
  </body>
</html>